[
    {
     "Comment": "Pass any loop variables used in the goroutine as an argument to the closure. [as specified in Effective Go](https://golang.org/doc/effective_go.html#channels)",
     "Filename": "test.go",
     "Line": 64,
     "Snippet": "func Test7(values []int) {\n\tfor i := 0; i \u003c 10; i++ {\n\t\tgo func() { //ISSUE\n\t\t\tfmt.Println(values[i])\n\t\t}()\n\t}\n}"
    },
    {
     "Comment": "Pass any loop variables used in the goroutine as an argument to the closure. [as specified in Effective Go](https://golang.org/doc/effective_go.html#channels)",
     "Filename": "test.go",
     "Line": 25,
     "Snippet": "func Test3(values []int, n int) {\n\tfor i, val := range values {\n\t\tgo func(val int) { //ISSUE\n\t\t\tif i \u003c n {\n\t\t\t\tfmt.Println(val)\n\t\t\t}\n\t\t}(val)\n\t}\n}"
    },
    {
     "Comment": "Pass any loop variables used in the goroutine as an argument to the closure. [as specified in Effective Go](https://golang.org/doc/effective_go.html#channels)",
     "Filename": "test.go",
     "Line": 82,
     "Snippet": "\tfor i, val := range values {\n\t\tval := val\n\t\tgo func() { //ISSUE\n\t\t\tif i \u003c n {\n\t\t\t\tfmt.Println(val)\n\t\t\t}\n\t\t}()\n\t}\n}"
    },
    {
     "Comment": "Pass any loop variables used in the goroutine as an argument to the closure. [as specified in Effective Go](https://golang.org/doc/effective_go.html#channels)",
     "Filename": "test.go",
     "Line": 54,
     "Snippet": "func Test6(values []int, n bool) {\n\tfor val := range values {\n\t\tgo func(n bool) { //ISSUE\n\t\t\tif n {\n\t\t\t\tfmt.Println(val)\n\t\t\t}\n\t\t}(n)\n\t}\n}"
    },
    {
     "Comment": "Pass any loop variables used in the goroutine as an argument to the closure. [as specified in Effective Go](https://golang.org/doc/effective_go.html#channels)",
     "Filename": "test.go",
     "Line": 9,
     "Snippet": "func Test1(values []int) {\n\tfor val := range values {\n\t\tgo func() { //ISSUE\n\t\t\tfmt.Println(val)\n\t\t}()\n\t}\n}"
    }
   ]